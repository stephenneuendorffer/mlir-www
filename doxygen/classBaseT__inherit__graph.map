<map id="BaseT" name="BaseT">
<area shape="rect" id="node2" href="$classmlir_1_1detail_1_1AsmParserImpl.html" title="This class provides the implementation of the generic parser methods within AsmParser. " alt="" coords="128,225,327,267"/>
<area shape="rect" id="node3" href="$classmlir_1_1detail_1_1DialectInterfaceBase.html" title="The base class used for all derived interface types. " alt="" coords="117,291,337,332"/>
<area shape="rect" id="node11" href="$classmlir_1_1detail_1_1StorageUserBase.html" title="Utility class for implementing users of storage classes uniqued by a StorageUniquer. " alt="" coords="123,1866,332,1922"/>
<area shape="rect" id="node43" href="$classmlir_1_1PassWrapper.html" title="This class provides a CRTP wrapper around a base pass class to define several necessary utility metho..." alt="" coords="152,1947,303,1988"/>
<area shape="rect" id="node45" href="$classmlir_1_1pdl__to__pdl__interp_1_1PredicateBase.html" title="Base class for all predicates, used to allow efficient pointer comparison. " alt="" coords="123,2013,331,2069"/>
<area shape="rect" id="node47" href="$classmlir_1_1pdl__to__pdl__interp_1_1PredicateBase_3_01ConcreteT_00_01BaseT_00_01void_00_01Kind_01_4.html" title="Base storage for simple predicates that only unique with the kind. " alt="" coords="123,2093,331,2149"/>
<area shape="rect" id="node48" href="$classmlir_1_1pdll_1_1ast_1_1Node_1_1NodeBase.html" title="This CRTP class provides several utilies when defining new AST nodes. " alt="" coords="136,2173,319,2215"/>
<area shape="rect" id="node49" href="$classmlir_1_1pdll_1_1ast_1_1Type_1_1TypeBase.html" title="This class provides several utilities when defining derived type classes. " alt="" coords="124,2239,331,2280"/>
<area shape="rect" id="node4" href="$classmlir_1_1DataLayoutDialectInterface.html" title="An interface to be implemented by dialects that can have identifiers in the data layout specification..." alt="" coords="671,5,906,47"/>
<area shape="rect" id="node5" href="$classmlir_1_1DialectDecodeAttributesInterface.html" title="Define an interface to decode opaque constant tensor. " alt="" coords="661,71,916,127"/>
<area shape="rect" id="node6" href="$classmlir_1_1DialectFoldInterface.html" title="Define a fold interface to allow for dialects to control specific aspects of the folding behavior for..." alt="" coords="695,152,882,193"/>
<area shape="rect" id="node7" href="$classmlir_1_1DialectInlinerInterface.html" title="This is the interface that must be implemented by the dialects of operations to be inlined..." alt="" coords="688,217,889,259"/>
<area shape="rect" id="node8" href="$classmlir_1_1DialectReductionPatternInterface.html" title="This is used to report the reduction patterns for a Dialect. " alt="" coords="663,283,914,339"/>
<area shape="rect" id="node9" href="$classmlir_1_1LLVMTranslationDialectInterface.html" title="Base class for dialect interfaces providing translation to LLVM IR. " alt="" coords="666,363,911,419"/>
<area shape="rect" id="node10" href="$classmlir_1_1OpAsmDialectInterface.html" title="mlir::OpAsmDialectInterface\l\&lt; OpAsmDialectInterface \&gt;" alt="" coords="685,444,892,485"/>
<area shape="rect" id="node12" href="$classmlir_1_1DataLayoutEntryAttr.html" title="A data layout entry attribute is a key&#45;value pair where the key is a type or an identifier and the va..." alt="" coords="639,509,938,580"/>
<area shape="rect" id="node13" href="$classmlir_1_1DataLayoutSpecAttr.html" title="A data layout specification is a list of entries that specify (partial) data layout information..." alt="" coords="668,604,909,675"/>
<area shape="rect" id="node14" href="$classmlir_1_1gpu_1_1AsyncTokenType.html" title="mlir::gpu::AsyncTokenType\l\&lt; AsyncTokenType, Type,\l TypeStorage \&gt;" alt="" coords="691,699,886,755"/>
<area shape="rect" id="node15" href="$classmlir_1_1gpu_1_1DeviceAsyncTokenType.html" title="Device&#45;side token storage type. There is only one type of device&#45;side token. " alt="" coords="677,779,900,835"/>
<area shape="rect" id="node16" href="$classmlir_1_1gpu_1_1MMAMatrixType.html" title="MMAMatrix represents a matrix held by a subgroup for matrix&#45;matrix multiply accumulate operations..." alt="" coords="692,859,885,915"/>
<area shape="rect" id="node17" href="$classmlir_1_1LLVM_1_1LLVMArrayType.html" title="LLVM dialect array type. " alt="" coords="669,940,909,1011"/>
<area shape="rect" id="node18" href="$classmlir_1_1LLVM_1_1LLVMFixedVectorType.html" title="LLVM dialect fixed vector type, represents a sequence of elements of known length that can be process..." alt="" coords="644,1035,933,1091"/>
<area shape="rect" id="node19" href="$classmlir_1_1LLVM_1_1LLVMFunctionType.html" title="LLVM dialect function type. " alt="" coords="675,1116,902,1187"/>
<area shape="rect" id="node20" href="$classmlir_1_1LLVM_1_1LLVMPointerType.html" title="LLVM dialect pointer type. " alt="" coords="669,1211,909,1281"/>
<area shape="rect" id="node21" href="$classmlir_1_1LLVM_1_1LLVMScalableVectorType.html" title="LLVM dialect scalable vector type, represents a sequence of elements of unknown length that is known ..." alt="" coords="659,1305,918,1376"/>
<area shape="rect" id="node22" href="$classmlir_1_1LLVM_1_1LLVMStructType.html" title="LLVM dialect structure type representing a collection of different&#45;typed elements manipulated togethe..." alt="" coords="669,1400,909,1471"/>
<area shape="rect" id="node23" href="$classmlir_1_1quant_1_1AnyQuantizedType.html" title="A quantized type that maps storage to/from expressed types in an unspecified way. ..." alt="" coords="685,1495,893,1565"/>
<area shape="rect" id="node24" href="$classmlir_1_1quant_1_1CalibratedQuantizedType.html" title="A quantized type that infers its range from given min/max values. " alt="" coords="635,1589,943,1660"/>
<area shape="rect" id="node25" href="$classmlir_1_1quant_1_1UniformQuantizedPerAxisType.html" title="Represents per&#45;axis (also known as per&#45;channel quantization). " alt="" coords="642,1684,935,1755"/>
<area shape="rect" id="node26" href="$classmlir_1_1quant_1_1UniformQuantizedType.html" title="Represents a family of uniform, quantized types. " alt="" coords="641,1779,936,1849"/>
<area shape="rect" id="node27" href="$classmlir_1_1shape_1_1ShapeType.html" title="The shape descriptor type represents rank and dimension sizes. " alt="" coords="665,1873,913,1915"/>
<area shape="rect" id="node28" href="$classmlir_1_1shape_1_1SizeType.html" title="The type of a single dimension. " alt="" coords="671,1939,906,1980"/>
<area shape="rect" id="node29" href="$classmlir_1_1shape_1_1ValueShapeType.html" title="The ValueShape represents a (potentially unknown) runtime value and shape. " alt="" coords="684,2005,893,2061"/>
<area shape="rect" id="node30" href="$classmlir_1_1shape_1_1WitnessType.html" title="The Witness represents a runtime constraint, to be used as shape related preconditions on code execut..." alt="" coords="659,2085,919,2127"/>
<area shape="rect" id="node31" href="$classmlir_1_1spirv_1_1ArrayType.html" title="mlir::spirv::ArrayType\l\&lt; ArrayType, CompositeType,\l detail::ArrayTypeStorage \&gt;" alt="" coords="681,2151,896,2207"/>
<area shape="rect" id="node32" href="$classmlir_1_1spirv_1_1CooperativeMatrixNVType.html" title="mlir::spirv::Cooperative\lMatrixNVType\&lt; CooperativeMatrix\lNVType, CompositeType, detail\l::CooperativeMatrixTypeStorage \&gt;" alt="" coords="665,2232,912,2303"/>
<area shape="rect" id="node33" href="$classmlir_1_1spirv_1_1ImageType.html" title="mlir::spirv::ImageType\l\&lt; ImageType, SPIRVType,\l detail::ImageTypeStorage \&gt;" alt="" coords="685,2327,892,2383"/>
<area shape="rect" id="node34" href="$classmlir_1_1spirv_1_1InterfaceVarABIAttr.html" title="An attribute that specifies the information regarding the interface variable: descriptor set..." alt="" coords="641,2408,936,2479"/>
<area shape="rect" id="node35" href="$classmlir_1_1spirv_1_1MatrixType.html" title="mlir::spirv::MatrixType\l\&lt; MatrixType, CompositeType,\l detail::MatrixTypeStorage \&gt;" alt="" coords="679,2503,899,2559"/>
<area shape="rect" id="node36" href="$classmlir_1_1spirv_1_1PointerType.html" title="mlir::spirv::PointerType\l\&lt; PointerType, SPIRVType,\l detail::PointerTypeStorage \&gt;" alt="" coords="683,2583,895,2639"/>
<area shape="rect" id="node37" href="$classmlir_1_1spirv_1_1RuntimeArrayType.html" title="mlir::spirv::RuntimeArray\lType\&lt; RuntimeArrayType,\l SPIRVType, detail::RuntimeArray\lTypeStorage \&gt;" alt="" coords="671,2664,906,2735"/>
<area shape="rect" id="node38" href="$classmlir_1_1spirv_1_1SampledImageType.html" title="mlir::spirv::SampledImage\lType\&lt; SampledImageType,\l SPIRVType, detail::SampledImage\lTypeStorage \&gt;" alt="" coords="667,2759,911,2829"/>
<area shape="rect" id="node39" href="$classmlir_1_1spirv_1_1StructType.html" title="SPIR&#45;V struct type. " alt="" coords="680,2854,897,2910"/>
<area shape="rect" id="node40" href="$classmlir_1_1spirv_1_1TargetEnvAttr.html" title="An attribute that specifies the target version, allowed extensions and capabilities, and resource limits. " alt="" coords="660,2934,917,2990"/>
<area shape="rect" id="node41" href="$classmlir_1_1spirv_1_1VerCapExtAttr.html" title="An attribute that specifies the SPIR&#45;V (version, capabilities, extensions) triple. " alt="" coords="659,3014,919,3070"/>
<area shape="rect" id="node42" href="$classmlir_1_1vector_1_1CombiningKindAttr.html" title="An attribute that specifies the combining function for vector.contract, and vector.reduction. " alt="" coords="643,3094,935,3150"/>
<area shape="rect" id="node44" href="$classmlir_1_1PassWrapper.html" title="mlir::PassWrapper\&lt;\l OpToOpPassAdaptor,\l OperationPass\&lt;\&gt; \&gt;" alt="" coords="709,3174,869,3230"/>
<area shape="rect" id="node46" href="$classmlir_1_1pdl__to__pdl__interp_1_1PredicateBase.html" title="mlir::pdl_to_pdl_interp\l::PredicateBase\&lt; ResultGroup\lPosition, Position, std::tuple\l\&lt; OperationPosition *, Optional\l\&lt; unsigned \&gt;, bool \&gt;, Predicates\l::ResultGroupPos \&gt;" alt="" coords="669,3255,908,3355"/>
</map>
